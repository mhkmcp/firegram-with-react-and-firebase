{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [url, setUrl] = useState(null);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    url,\n    error,\n    progress\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/macboookpro/react-work/Traversy/firegram-with-react-and-firebase/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","useStorage","file","url","setUrl","error","setError","progress","setProgress","storageRef","ref","name","collectionRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMW,UAAU,GAAGV,cAAc,CAACW,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGZ,gBAAgB,CAEtCS,UAFsB,CAEXI,GAFW,CAEPX,IAFO,EAEDY,EAFC,CAEE,eAFF,EAEoBC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAV,MAAAA,WAAW,CAACQ,UAAD,CAAX;AACH,KALqB,EAKlBG,GAAD,IAAS;AACRb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACH,KAPqB,EAOnB,YAAY;AACX,YAAMhB,GAAG,GAAG,MAAMM,UAAU,CAACW,cAAX,EAAlB;AACAhB,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KAVqB,CAAtB;AAWH,GAdQ,EAcN,CAACD,IAAD,CAdM,CAAT;AAgBA,SAAO;AAAEC,IAAAA,GAAF;AAAOE,IAAAA,KAAP;AAAcE,IAAAA;AAAd,GAAP;AAEH,CAvBD;;AAyBA,eAAeN,UAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { projectStorage, projectFirestore } from \"../firebase/config\"\n\nconst useStorage = (file) => {\n    const [url, setUrl] = useState(null)\n    const [error, setError] = useState(null)\n    const [progress, setProgress] = useState(null)\n\n    useEffect(() => {\n        // references\n        const storageRef = projectStorage.ref(file.name)\n        const collectionRef = projectFirestore.\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage)\n        }, (err) => {\n            setError(err)\n        }, async () => {\n            const url = await storageRef.getDownloadURL()\n            setUrl(url)\n        })\n    }, [file])\n\n    return { url, error, progress }\n\n}\n\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}